name: Sync with Upstream and Create New Branch if Needed

on:
  schedule:
    - cron: '0 7 * * 1,4' # scheduled at 07:00 every Monday and Thursday
  workflow_dispatch: # click the button on Github repo!

jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest
    name: Sync main with upstream latest
    outputs:
      new_commits: ${{ steps.sync.outputs.has_new_commits }}

    steps:
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout main
      uses: actions/checkout@v2
      with:
        ref: dev
        # submodules: 'recursive'     ### may be needed in your situation

    # Step 2: run this sync action - specify the upstream repo, upstream branch to sync with, and target sync branch
    - name: Pull (Fast-Forward) upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v2.1
      with:
        upstream_repository: aormsby/hugo-deploy-to-pages
        upstream_branch: main
        target_branch: dev
        git_pull_args: --ff-only                    # optional arg use, defaults to simple 'pull'
        github_token: ${{ secrets.GITHUB_TOKEN }}   # optional, for accessing repos that require authentication

    # Step 3: Display a message if 'sync' step had new commits (simple test)
    - name: Check for new commits
      if: steps.sync.outputs.has_new_commits
      run: echo "There were new commits."

    # Step 4: Print a helpful timestamp for your records (not required, just nice)
    - name: Timestamp
      run: date

  create_new_branch:
    needs: sync_with_upstream
    runs-on: ubuntu-latest
    if: needs.sync_with_upstream.outputs.new_commits == 'true'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set branch name
      id: vars
      run: echo "::set-output name=branch_name::$(date -u +"%Y-%m-%dT%H-%M-%S")"

    - name: Create new branch and push
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git checkout -b ${{ steps.vars.outputs.branch_name }}
        git push origin ${{ steps.vars.outputs.branch_name }}


    - name: Check for changes and create branch if needed
      run: |
        # Check if there are new commits in the upstream main branch
        if [ $(git rev-list --count HEAD..upstream/main) -gt 0 ]; then
          # Generate branch name with current date-time in ISO 8601 format
          BRANCH_NAME=$(date -u +"%Y-%m-%dT%H-%M-%S")
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
        fi
